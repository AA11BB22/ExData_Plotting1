apply(colnames(d1), FUN = strsplit(x = colnames(d1), split = "wgtp"))
strsplit(x = colnames(d1), split = "wgtp")
strsplit(x = colnames(d1), split = "wgtp")[12]
strsplit(x = colnames(d1), split = "wgtp")[123]
rm(D1)
rm(d1)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
d1 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
View(d1)
d1 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", skip = 4, nrow = 190)
apply(d1$X.4, gsub(",", ""))
?gsub
apply(d1$X.4, FUN = gsub(",", ""))
gsub(",", "", d1$X.4)
?average
?avg
mean(gsub(",", "", d1$X.4))
mean(gsub(",", "", d1$X.4), na.rm = T)
mean(as.numerical(gsub(",", "", d1$X.4))
)
mean(as.numeric(gsub(",", "", d1$X.4)))
grep("^United", d1$X.3)
?grep
grepl("^United", d1$X.3)
table(grepl("^United", d1$X.3))
url2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
url
d2 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
View(d2)
d1 <- select(d1, c(X, X.1, X.3, X.4))
View(d1)
View(d2)
colnames(d1) <- c("CountryCode", "Rank", "Long.Name", "Economy" )
View(d1)
d3 <- merge(d1, d2, by = "CountryCode")
View(d3)
nrow(d3)
grepl("*[Ff]iscal*year*[Jj]une", d3$Special.Notes)
table(grepl("*[Ff]iscal*year*[Jj]une", d3$Special.Notes))
table(grepl("*[Ff]iscal", d3$Special.Notes))
table(grepl("*[Ff]iscal* year* [Jj]une", d3$Special.Notes))
table(grepl("(.*)?[Ff]iscal(.*)? year(.*)? [Jj]une", d3$Special.Notes))
library(quantmod)
install.package("quantmode")
install.package("quantmod")
installs.package("quantmod")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
library(lubridate)
?wday
wday("Monday")
wday("Monday", label = T)
wday("Monday", label = T, abbr = F)
wday("Mon", label = T, abbr = F)
wday("Mon", label = T, abbr = T)
wday("Mon", label = T)
sampleTimes
?count
nrow(sampleTimes[year(sampleTimes) == 2012 & wday(sampleTimes) == "Monday" ])
nrow(sampleTimes[year(sampleTimes) == 2012 & wday(sampleTimes) == "Mon"])
sampleTimes[year(sampleTimes) == 2012 & wday(sampleTimes) == "Mon"])
sampleTimes[year(sampleTimes) == 2012 & wday(sampleTimes) == "Mon"]
year(sampleTimes) == 2012 & wday(sampleTimes) == "Mon"
wday(sampleTime[1])
wday(sampleTime[[1]])
class(sampleTimes)
sampleTimes[1]
wday(sampleTime[1)
wday(sampleTime[1]_
wday(sampleTime[1])
?wday
wday(sampleTime[1], label = T)
year(sampleTime[1])
wday(sampleTimes[1], label = T)
wday(sampleTimes[1], label = T) == wday(Wed)
wday(sampleTimes[1], label = T) == "Wed"
sampleTimes[year(sampleTimes) == 2012 & wday(sampleTimes) == "Mon"]
bool <- year(sampleTimes) == 2012 & wday(sampleTimes) == "Mon"
bool
table(bool)
wday(sampleTimes[1], label = T) == "Wed"
sampleTimes[1]
wday(sampleTimes[1], label = T) == "Wed" && year(sampleTimes[1]) == 2007
bool <- year(sampleTimes) == 2012 && wday(sampleTimes) == "Mon"
bool
table(bool)
year(sampleTimes) == 2012 && wday(sampleTimes) == "Mon"
year(sampleTimes) == 2012 || wday(sampleTimes) == "Mon"
year(sampleTimes) == 2012 | wday(sampleTimes) == "Mon"
(year(sampleTimes) == 2012 | wday(sampleTimes) == "Mon")
bool <- (year(sampleTimes) == 2012 & wday(sampleTimes) == "Mon")
table(bool)
bool <- ((year(sampleTimes) == 2012) & (wday(sampleTimes) == "Mon"))
table(bool)
sampleTimes
bool <- (year(sampleTimes) == 2012)
table(bool)
bool2 <- (wday(sampleTimes) == "Mon")
table(bool2)
?library
library(lubridate)
dates <- ymd(c("2015/10/29", "2015/12/24", "2016/2/25", "2016/4/28", "2016/6/30", "2016/9/1", "2016/10/27"))
dates
class(dates)
dates[1] - dates[0]
dates[1] - dates[0]
interval(dates[0], dates[1])
dates[1]
dates[0]
interval(dates[1], dates[2])
dates[2] - dates[1]
d1 <- 2; d2 <- 1;
dates[d1] - dates[d2]
d1++
0
d1+=1
d1 <- d1 + 1
d2 <- d1 - 1
d1
d2
dates[d1] - dates[d2]
d2 <- d1
d1 <- d1 + 1
dates[d1] - dates[d2]
d2 <- d1
d1 <- d1 + 1
dates[d1] - dates[d2]
d2 <- d1
d1 <- d1 + 1
dates[d1] - dates[d2]
d2 <- d1
d1 <- d1 + 1
dates[d1] - dates[d2]
d2 <- d1
d1 <- d1 + 1
dates[d1] - dates[d2]
entry
size(dates)
length(dates)
date[7] + days(63)
dates[7] + days(63)
?apply
matrix(1:6, nrow = 2)
apply(matrix(1:6, nrow = 2), MARGIN = c(1,2), FUN = x + 1)
apply(matrix(1:6, nrow = 2), MARGIN = c(1,2), FUN =  fun(x) <- x + 1)
apply(matrix(1:6, nrow = 2), MARGIN = c(1,2), FUN = (fun(x) <- x + 1))
apply(matrix(1:6, nrow = 2), MARGIN = c(1,2), FUN = (funtion(x) <- x + 1))
fun <- function(x){x+1}
apply(matrix(1:6, nrow = 2), MARGIN = c(1,2), FUN = (funtion(x) x + 1))
apply(matrix(1:6, nrow = 2), MARGIN = c(1,2), FUN = funtion(x){x + 1})
apply(matrix(1:6, nrow = 2), MARGIN = c(1,2), FUN = fun)
apply(matrix(1:6, nrow = 2), MARGIN = 2, FUN = fun)
apply(matrix(1:6, nrow = 2), MARGIN = 1, FUN = fun)
apply(matrix(1:6, nrow = 2), MARGIN = 1, FUN = fun)
library(swirl)
swirl()
exit()
quit()
?strsplit
strsplit("a.b.c", ".")
unlist(strsplit("a.b.c", "."))
(strsplit("a.b.c", "[.]")
)
?grepl
grep("[a-z]", letters)
txt <- c("arm","foot","lefroo", "bafoobar")
grep("foo", txt)
grep("foo", txt, value = TRUE)
grep("foo.", txt, value = TRUE)
grep("foo.", txt, value = TRUE, fixed = TRUE)
grep("\.", txt, value = TRUE, fixed = TRUE)
grep("*a", txt, value = TRUE, fixed = TRUE)
grep("[*]+", txt, value = TRUE, fixed = TRUE)
grep("[*]+", txt, value = TRUE)
grep("[^a]+", txt, value = TRUE)
grep("[^a]", txt, value = TRUE)
grep("[^?a]", txt, value = TRUE)
grep("[^?.]", txt, value = TRUE)
grep("[^a]", txt, value = TRUE)
grep("[^av]", txt, value = TRUE)
grep("[^arm]", txt, value = TRUE)
grep("[^a*?]", txt, value = TRUE)
grep("[^a*]", txt, value = TRUE)
grep("[^a*.]", txt, value = TRUE)
grep("[^a.*]", txt, value = TRUE)
grep("[^a(.*)]", txt, value = TRUE)
grep("[^a(.)*]", txt, value = TRUE)
grep("[^arm]", txt, value = TRUE)
grep("[^a.*]", txt, value = TRUE)
grep("[^a.,]", txt, value = TRUE)
grep("[^a..]", txt, value = TRUE)
grep("[^a]..", txt, value = TRUE)
grep("[^a]..", txt, value = TRUE)
grep("[^a]*", txt, value = TRUE)
grep("[^a].*", txt, value = TRUE)
grep("[^a](.*)", txt, value = TRUE)
grep("[^a][.*]", txt, value = TRUE)
grep("[^a]", txt, value = TRUE)
grep("[^a.*]", txt, value = TRUE)
grep("[^a ]", txt, value = TRUE)
grep("[^af]", txt, value = TRUE)
grep("[^(a*)]", txt, value = TRUE)
grep("[^(a.*)]", txt, value = TRUE)
grep("[^(arm)]", txt, value = TRUE)
grep("[^a[a-zA-z]]", txt, value = TRUE)
grep("[^(a[a-zA-Z]]", txt, value = TRUE)
grep("[^(a[a-zA-Z])]", txt, value = TRUE)
grep("^a", txt, value = TRUE)
grep("[^a][^*]", txt, value = TRUE)
grep("[^a][^.*]", txt, value = TRUE)
grep("[^a][^r]", txt, value = TRUE)
grep("[^a][^r][^m]", txt, value = TRUE)
grep("[^(arm)]", txt, value = TRUE)
grep("[^(a.*)]", txt, value = TRUE)
grep("*?[^a]*?", txt, value = TRUE)
grep(".*?[^a].*?", txt, value = TRUE)
grep("[^a]", txt, value = TRUE)
grep("*[^a]*", txt, value = TRUE)
grep("^*[^a]*", txt, value = TRUE)
grep("[^a]", txt, value = TRUE)
grep("[^(.r.)]", txt, value = TRUE)
grep("[^(r.)]", txt, value = TRUE)
grep("^[^(.r.)]", txt, value = TRUE)
grep("^[^r]", txt, value = TRUE)
grep("[^r]", txt, value = TRUE)
grep("[^arm]", txt, value = TRUE)
grep("[^.*]", txt, value = TRUE)
grep("^((?!hede).)*$", txt, value = TRUE)
grep("^((?!hede).)*$", txt, value = TRUE)
grep("^(?!hede).*$", txt, value = TRUE)
grep("^(?!a).*$", txt, value = TRUE)
grep("^(?).*$", txt, value = TRUE)
grep("^(?a).*$", txt, value = TRUE)
grep("^(!a).*$", txt, value = TRUE)
grep("(!a).*$", txt, value = TRUE)
grep("!a..", txt, value = TRUE)
grep("^!a..", txt, value = TRUE)
grep("^!a*$", txt, value = TRUE)
grep("^(*?)!a*$", txt, value = TRUE)
grep("^*!a*$", txt, value = TRUE)
grep("^*(!a)*$", txt, value = TRUE)
grep("*(!a)*", txt, value = TRUE)
grep("$(!a)*", txt, value = TRUE)
grep("^(!a)*", txt, value = TRUE)
grep("[^a*]", txt, value = TRUE)
grep("*[^a*]*", txt, value = TRUE)
grep("*[^a]*", txt, value = TRUE)
grep("^*[^a]*.*", txt, value = TRUE)
grep("^[^a]*.*", txt, value = TRUE)
grep("^([^a]).*", txt, value = TRUE)
grep("^[^a].*", txt, value = TRUE)
grep("*[^a].*", txt, value = TRUE)
grep(".*[^a].*", txt, value = TRUE)
grep("(.*)?[^a].*", txt, value = TRUE)
grep("^(.*)?[^a].*", txt, value = TRUE)
grep("^(.*?)[^a].*", txt, value = TRUE)
grep("[^a].*", txt, value = TRUE)
grep("^[^a].*", txt, value = TRUE)
grep("^.*[^a].*", txt, value = TRUE)
grep("^[.]*[^a].*", txt, value = TRUE)
grep("^([.]*?)[^a].*", txt, value = TRUE)
grep("^([.]*?)[^a][.*]", txt, value = TRUE)
grep("^[.*][^a][.*]", txt, value = TRUE)
grep("^[.*?][^a][.*?]", txt, value = TRUE)
grep("[^a]", txt, value = TRUE)
grep("[^a]*", txt, value = TRUE)
grep("[^a].*", txt, value = TRUE)
grep("[^a][.*]", txt, value = TRUE)
grep("[^a][a-zA-Z]*", txt, value = TRUE)
grep("[a-zA-Z]*[^a][a-zA-Z]*", txt, value = TRUE)
grep("^[^a]+", txt, value = TRUE)
grep("[^a]+", txt, value = TRUE)
grep("^[^a]*[^a]*$", txt, value = TRUE)
grep("^[^a]*", txt, value = TRUE)
grep("^[^a]*[^a]*$", txt, value = TRUE)
grep("^[^a]*$", txt, value = TRUE)
grep("[^a]*$", txt, value = TRUE)
grep("^[^a]*$", txt, value = TRUE)
grep("^[^a]$", txt, value = TRUE)
grep("^[^a]*$", txt, value = TRUE)
grep("^[^ae]*$", txt, value = TRUE)
swirl()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("ggplot2")
swirl()
version()
version
version
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25  )
summary(ppn)
summary(ppm)
quantile(ppm)
?boxplot
boxplot(ppm, col = "blue")
?abline
abline(h = 12)
hist(ppm)
hist(ppm, col = "greenn")
hist(ppm, col = "green")
?rug
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
median(ppm)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
View(pollution)
reg <- table(pollution$region)
reg
?barplot
barplot(reg, col = "wheat", main = "Number of Countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each
| Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(ppm ~ reg, col = "red")
boxplot(pollution, pm25~region, col = "red")
?boxplot
boxplot(pm25~region, col = "red")
boxplot(pollution$pm25~pollution$region, col = "red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
?subset
east <- subset(pollution, region = "east")
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col= "green")
west <- subset(pollution, region == "west")
hist(subset(pollution,region=="west")$pm25, col = "green")
?with
with(pollution, plot)
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
col = pollution$region
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$pm25~west$latitude, main = "West")
plot(west$latitude, west$pm25, main = "West")
plot(west$latitude, west$pm25, main = "East")
plot(east$latitude, west$pm25, main = "East")
plot(east$latitude, east$pm25, main = "East")
library(swirl)
swirl()
quartz()
?Devices
?R
names(faithful)
with(faithful, plot(eruptions, waiting))
play()
str(faithful)
swirl()
with(faithful, plot(eruptions, waiting, main = "Old Faithful Geyser data"))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
pdf(file="myplot.pdf")
title(main = "Old Faithful Geyser data")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off
dev.off()
dev.cur()
with(faithful, plot(eruptions,
| waiting))
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy("png", file = "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.close()
dev.off()
head(cars)
exit()
quit()
library(swirl)
swirl()
View(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
?xyplot
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
names(mpg)
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hmy, data = mpg)
qplot(displ, hwy, data = mpg)
quit()
swirl()
library(swirl)
swirl()
swirl()
dataMatrix
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
View(mat)
matu %*% d %*% matv
matu %*% diag %*% matv
diag
matu %*% diag %*% t(matv)
scale(svd(mat))
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2
svd2$d
dim(faceData)
a1 <- (svd1$u[,1] and svd1$d[1])
a1 <- (svd1$u[,1] %*% svd1$d[1])
exit()
swirl()
library(swirl)
swirl()
data(mpg)
head(airquality)
range(airquality$Ozone, na.rm = T)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
with(airquality, boxplot(Ozone ~ Month))
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
main = "Ozone and Wind in New York City"
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone and Wind in New York City")
title(main = "Ozone and Wind in New York City")
main
main()
library(swilr)
library(swirl)
swirl()
swirl()
with(airquality, plot(Wind~Ozone))
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City" )
length(par())
?par
names(par())
par()$spin
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, airquality$Month = 5)
may <- subset(airquality, airquality$Month == 5)
View(may)
may <- subset(airquality, Month==5)
?type
?plot
with(may, plot(wind, ozone, type = "t"))
with(may, plot(Wind, Ozone, type = "t"))
with(may, plot(Wind, Ozone, type = "n"))
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month != 5)
?pchisq
?pch
poiints(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
?legend
legend("topright", pch = c(17,8), col = c("blue", "red"), legend = c("May", "Other Months"))
lty = 2
abline(v=median(airquality$Wind),lty=2,lwd=2)
mfrow = v(1,2)
mfrow = c(1,2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone)
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3)
, mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar
| Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
title(main = "Ozone and Weather in New York City", outer = TRUE)
mtext("Ozone and Weather in New York City", outer = TRUE)
setwd("~/Desktop/ExData_Plotting1")
